#!/bin/sh

set -e

export VAULT_ADDR=http://127.0.0.1:8200
export VAULT_TOKEN=root

mkdir /tmp/policies

cat <<EOF > /tmp/policies/engineering-policy.hcl
path "secret/*" {
  capabilities = ["list"]
}

path "secret/engineering/*" {
  capabilities = ["create", "read", "update", "delete", "list"]
}
EOF

vault policy write engineering /tmp/policies/engineering-policy.hcl

cat <<EOF > /tmp/policies/security-policy.hcl
# Manage auth methods broadly across Vault
path "auth/*"
{
  capabilities = ["create", "read", "update", "delete", "list", "sudo"]
}

# Create, update, and delete auth methods
path "sys/auth/*"
{
  capabilities = ["create", "update", "delete", "sudo"]
}

# List auth methods
path "sys/auth"
{
  capabilities = ["read"]
}

# List existing policies
path "sys/policies/acl"
{
  capabilities = ["list"]
}

# Create and manage ACL policies
path "sys/policies/acl/*"
{
  capabilities = ["create", "read", "update", "delete", "list", "sudo"]
}

# List, create, update, and delete key/value secrets
path "secret/*"
{
  capabilities = ["create", "read", "update", "delete", "list", "sudo"]
}

# Manage secrets engines
path "sys/mounts/*"
{
  capabilities = ["create", "read", "update", "delete", "list", "sudo"]
}

# List existing secrets engines.
path "sys/mounts"
{
  capabilities = ["read"]
}

# Read health checks
path "sys/health"
{
  capabilities = ["read", "sudo"]
}

# Grant access to active directory (ad) secret engine
path "ad/*"
{
  capabilities = ["create", "read", "update", "delete", "list", "sudo"]
}
EOF

vault policy write security /tmp/policies/security-policy.hcl

exit 0